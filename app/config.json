{
    /**
     * HIGHSCORE SETTINGS
     *
     * set some settings for the highscore control
     */
    "highscore": {
        /* Points you need to get in the highscore list */
        "pointsNeed": 500,
        /* The access key to pare with the request from database */
        "accessKey": "73j&)1!ßß34",
    },

    /**
     * PUG SETTINGS
     *
     * configure the speed, movement and animation of the
     * pug, which is played by the user
     */
    "pug": {
        /* The sped the pugs moves each 10ms (px) */
    	"moveSpeed": 2.5,
        /* Jump speed the pug takes up multiplied by 2 when falls down (increase px) */
        "jumpSpeed": 6,
        /* How often the animation changes the frame (ms) */
        "walkAnimationMs": 70,
        /* The maximal jump height the player can reach (px) */
        "maxJumpHeight": 150,
    },

    /**
     * MODULE SETTINGS
     *
     * configure module like the boost reloading speed
     */
    "module": {
        "boost": {
            /* Multiplied by default speed */
            "speedIncicator": 3,
            /* Speed for the boost for reloading (ms) */
            "reloadingDelay": 2000,
            /* Max repeats of one tick */
            "maxCount": 30,
            /* Pixels add on tick */
            "pixelY": 1
        }
    },

    /**
     * RAIN SETTINGS
     *
     * configure the rain by it's speed and animation
     * framerate
     */
    "rain": {
        /* Fall speed on loading (ms) */
        "initialFallSpeed": 5000/*5000*/,
        /* Spawn interval of each drop (ms) */
        "spawnInterval": 1000/*2000*/,
        /* HIGHEST size of one drop for calculating all ranges (px) */
        "defaultSize": 40,
        /* Classes and values for default drop (chosen randomly) */
        "dropClasses": [
            "candy", "bone", "hotdog"
        ]
    },

    /**
     * ENVIRONMENT SETTINGS
     *
     * configure the environment components
     */
    "environment": {
        /* Properties of the clouds */
        "clouds": {
            /* Update clouds position (should be 1 second under the transition speed, which is set in CSS) */
            "updateTrigger": 60000, /* Animation not supported at the moment */
            /* Classes will count from 1 to {GIVEN_NUMBER} */
            "classCount": 5,
            /* Amoun of the clouds, which will be spawned between this values (randomly) */
            "amount": {
                "min": 10,
                "max": 20
            }
        }
    },

    /**
     * LEVEL SETTINGS
     *
     * ------------------------------------------
     *
     * A little functions/component -name "library-overview":
     *
     * {
     *     "rainController" = {
     *         "newSpawnInterval(int ms)",
     *         "newDropFallspeed(int ms)",
     *         "randomizeFallspeed(boolean active = true)",
     *         "windSimulation(boolean active, string opt_direction, int opt_pixel)"
     *     },
     *     pugController = {
     *         "newMoveSpeed(int px, boolean opt_addToCurrent = false)",
     *         "newBoostLoaderDelay(int ms)",
     *         "newWalkAnimationMs(int ms)",
     *         "newMaxJumpHeight(int px)",
     *         "newJumpSpeed(int ms)"
     *     }
     * }
     *
     * ------------------------------------------
     *
     * SOME THINGS TO KNOW:
     * - The first value is the points a user needs...
     * - ...to reach the given level in the second value
     * - The third value is the name of the component...
     * - ...with the functionname in "[]" functionname
     * - With the third value you can manipulate the behaviour of some components
     * - Strings as parameters in functions don't need quotation marks
     * - To see the current value of a function from this game look to the last given value or to
     *   the default value from above
     * - Seperator for the functions = /
     * - Seperator for the componets = ;
     * - Example: rainController[newSpawnInterval(400)/newDropFallspeed(1000)];pointController[resetPoints()]
     * - Directios are defined as followed:
     *   + left to right: ltr
     *   + right to left: rtl
     *
     * IMPORTANT:
     * - Do not use namespaces that aren't in the library
     * - Keep the array clear if it get's bigger
     * - You need a semicolon at the end of one component and at the end of each function...
     *   ... even if you modify only one component or one function
     * - Try to write all arguments in one line
     */
    "levels": [
        [10,       2, "rainController[newDropFallspeed(4300)];pugController[newMoveSpeed(3.2)]"],
        [150,      3, "rainController[windSimulation(true, ltr, 1)]"],
        [250,      4, "rainController[newDropFallspeed(3700)/windSimulation(true, rtl, 1)];pugController[newMoveSpeed(3.9)]"],
        [300,      5, "rainController[newDropFallspeed(3200)/windSimulation(false)/randomizeFallspeed()];pugController[newMoveSpeed(4.5)]"],
        [350,      8],
        [450,      10]
    ]
}